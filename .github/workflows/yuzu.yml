name: 'Build Yuzu-EA'

on:
  push:
    branches:
      - 'main'
    paths:
      - '**.patch'
  schedule:
    # run every day
    - cron: '0 0 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: 'build (windows, msvc)'

    runs-on: windows-2022
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          repository: yuzu-emu/yuzu
          submodules: recursive
          fetch-depth: 0
      - name: Checkout fix
        uses: actions/checkout@v3
        with:
          path: fix
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Set version
        shell: bash
        run: |
          echo YUZU_VER=ea-`date +'%Y%m%d'`.${{ github.run_number }} >> $GITHUB_ENV
      - name: Configure git
        run: |
          git config --global user.email "yuzu@yuzu-emu.org"
          git config --global user.name "yuzubot"
      - name: Merge
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir patches && pip3 install requests urllib3
          python fix/scripts/merge/apply-patches-by-label.py "early-access-merge" "" "EA"
          git am --3way --whitespace=fix --reject fix/*.patch || git am --skip || true
      - name: Install dependencies
        # due to how chocolatey works, only cmd.exe is supported here
        shell: cmd
        run: |
          choco install vulkan-sdk
          call refreshenv
          echo %PATH% >> %GITHUB_PATH%
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Configure
        env:
          CC: cl.exe
          CXX: cl.exe
          CXXFLAGS: "/Gw /GA /Gr /Ob2"
        run: |
          glslangValidator --version
          mkdir build
          cd build
          cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_POLICY_DEFAULT_CMP0069=NEW -DYUZU_ENABLE_LTO=ON -DYUZU_USE_BUNDLED_QT=1 -DYUZU_USE_BUNDLED_SDL2=1 -DYUZU_USE_QT_WEB_ENGINE=ON -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON -DYUZU_ENABLE_COMPATIBILITY_REPORTING=OFF -DYUZU_TESTS=OFF -DUSE_DISCORD_PRESENCE=ON -DENABLE_QT_TRANSLATION=ON -DDISPLAY_VERSION="early-access" -DCMAKE_BUILD_TYPE=Release -DYUZU_CRASH_DUMPS=ON ..
      - name: Build
        run: msbuild "build/yuzu.sln" /m /p:Configuration=Release
      - name: Pack
        shell: pwsh
        run: ./fix/scripts/windows/upload.ps1 ea
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.YUZU_VER }}
          name: yuzu-${{ env.YUZU_VER }}
          prerelease: false
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: |
            artifacts/*
